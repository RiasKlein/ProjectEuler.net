#################################################################################
#
#	dist.py
#
#	Project Euler (projecteuler.net) Problem 29
#	Distinct powers
#
#	Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5
#	If they are all placed in numerical order, with any repeats removed
#	we get the following sequence of 15 distinct terms:
#		4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
#	How many distinct terms are in the sequence generated by a^b for:
#	2 <= a <= 100 and 2 <= b <= 100?
#
#	Program by: Shunman Tse
#
#################################################################################

import math

"""
For this problem, the trivial method is to solve for:
a^b for a in range 2 ~ 100 and b in range 2 ~ 100
If the term has been encountered before, then ignore it;
otherwise, we will add it to a list

When the creation of the list is complete, we just have
to see how many terms there are in the list.
"""

# main
def main():
	dist_terms = []		# List of distinct terms

	for a in range (2, 101):
		for b in range (2, 101):
			term = int (math.pow (a, b))
			if term not in dist_terms:
				dist_terms.append (term)

	print len (dist_terms)
	
main()